{"version":3,"sources":["components/Header/Header.jsx","redux/mock-data.js","redux/order-reducer.js","components/PlanCard/PlanCard.jsx","components/PlanSelect/PlanSelect.jsx","components/SlotsSelect/SlotsSelect.jsx","components/Step1/Step1.jsx","components/TermSelect/TermSelect.jsx","components/Step2/Step2.jsx","components/Step3/Step3.jsx","components/Button/Button.jsx","components/Pagination/Pagination.jsx","components/MasterForm/MasterForm.jsx","components/OrderItem/OrderItem.jsx","components/Order/Order.jsx","components/FinalStep/FinalStep.jsx","App.jsx","redux/data-reducer.js","redux/store.js","index.js"],"names":["Header","className","type","data","id","name","countries","itemCost","cost","minItems","subscriptions","value","discount","CHANGE_PLAN","CHANGE_TERM","CHANGE_SLOTS","calcPlanCost","perMonth","slots","slotCost","calcTotalCost","planCost","term","ratio","calcDiscountRatio","calcTotalCostForSelect","map","item","initialState","balance","planName","slotsNumber","minSlotsNumber","totalCost","subscriptionTerm","costPerMonth","minSlots","isTermSelected","totalCostForSelect","PlanCard","changePlan","onChange","evt","target","Math","round","href","PlanSelect","plans","plansElement","SlotsSelect","changeSlots","useState","isError","setError","min","disabled","onBlur","onClick","newSlots","Number","Step1","currentStep","TermSelect","changeTerm","options","i","label","selectedOption","Step2","Step3","Button","isActive","mod","Pagination","MasterForm","props","_next","changeStep","_prev","setState","isActiveNext","state","isActivePrev","paginationName","this","React","Component","connect","planId","order","count","OrderItem","added","description","termElement","discountElement","currentPlanName","planElement","termDescription","App","setStep","reducers","combineReducers","action","currentPlan","discountRatio","planCostWithSlots","discountRatioWithSlots","discountRatioWithTerm","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3a098f0.chunk.js","sourcesContent":["import './Header.scss';\n\nfunction Header() {\n  return (\n    <div className=\"header\">\n      <h1 className=\"header__title\">Оформление подписки</h1>\n      <button className=\"header__close\" type=\"button\"></button>\n    </div>\n  );\n}\n\nexport default Header;\n","// Some data for the application\n\nconst data = [\n  {\n    id: 1,\n    name: `«Стандарт»`,\n    countries: 59,\n    itemCost: 7900,\n    cost: 9900,\n    minItems: 20,\n  },\n  {\n    id: 2,\n    name: `«Стандарт+»`,\n    countries: 74,\n    itemCost: 9900,\n    cost: 16500,\n    minItems: 15,\n  },\n  {\n    id: 3,\n    name: `«Премиум»`,\n    countries: 90,\n    itemCost: 11900,\n    cost: 37900,\n    minItems: 10,\n  },\n];\n\nconst balance = 400000;\n\nconst subscriptions = [\n  { id: 1, value: 1, discount: 0 },\n  { id: 2, value: 2, discount: 10 },\n  { id: 3, value: 3, discount: 20 },\n  { id: 4, value: 4, discount: 30 },\n];\n\nexport { data, balance, subscriptions };\n","import { data, balance, subscriptions } from './mock-data';\n\nconst CHANGE_PLAN = 'CHANGE_PLAN';\nconst CHANGE_TERM = 'ADD_TERM';\nconst CHANGE_SLOTS = 'CHANGE_SLOTS';\n\nconst calcPlanCost = (perMonth, slots, slotCost) => {\n  return slots * slotCost + perMonth;\n};\n\nconst calcTotalCost = (planCost, term = 1, ratio = 1) => {\n  return planCost * term * ratio;\n};\n\nconst calcDiscountRatio = (discount) => {\n  return (100 - discount) / 100;\n};\n\nconst calcTotalCostForSelect = (planCost) => {\n  return subscriptions.map((item) => {\n    return planCost * item.value * calcDiscountRatio(item.discount);\n  });\n};\n\nconst initialState = {\n  balance: balance,\n  id: null,\n  planName: null,\n  slotsNumber: null,\n  minSlotsNumber: null,\n  planCost: null,\n  totalCost: null,\n  discount: 0,\n  subscriptionTerm: 1,\n  costPerMonth: null,\n  minSlots: null,\n  slotCost: null,\n  isTermSelected: false,\n  totalCostForSelect: null,\n};\n\nconst orderReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case CHANGE_PLAN:\n      const currentPlan = data[action.id - 1];\n      const planCost = calcPlanCost(\n        currentPlan.cost,\n        currentPlan.minItems,\n        currentPlan.itemCost\n      );\n      const discountRatio = calcDiscountRatio(state.discount);\n      const totalCost = calcTotalCost(\n        planCost,\n        state.subscriptionTerm,\n        discountRatio\n      );\n      return {\n        ...state,\n        id: currentPlan.id,\n        planName: currentPlan.name,\n        slotsNumber: currentPlan.minItems,\n        minSlotsNumber: currentPlan.minItems,\n        slotCost: currentPlan.itemCost,\n        costPerMonth: currentPlan.cost,\n        planCost: planCost,\n        totalCost: totalCost,\n        totalCostForSelect: calcTotalCostForSelect(planCost),\n      };\n\n    case CHANGE_SLOTS:\n      const planCostWithSlots = calcPlanCost(\n        state.costPerMonth,\n        action.count,\n        state.slotCost\n      );\n      const discountRatioWithSlots = calcDiscountRatio(state.discount);\n      return {\n        ...state,\n        slotsNumber: action.count,\n        planCost: planCostWithSlots,\n        totalCost: calcTotalCost(\n          planCostWithSlots,\n          state.subscriptionTerm,\n          discountRatioWithSlots\n        ),\n        totalCostForSelect: calcTotalCostForSelect(planCostWithSlots),\n      };\n\n    case CHANGE_TERM:\n      const discount = subscriptions[action.count - 1].discount;\n      const discountRatioWithTerm = calcDiscountRatio(discount);\n      return {\n        ...state,\n        subscriptionTerm: action.count,\n        discount: discount,\n        totalCost: calcTotalCost(\n          state.planCost,\n          action.count,\n          discountRatioWithTerm\n        ),\n        isTermSelected: true,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst changePlan = (id) => ({\n  type: CHANGE_PLAN,\n  id,\n});\n\nconst changeSlots = (count) => ({\n  type: CHANGE_SLOTS,\n  count,\n});\n\nconst changeTerm = (count) => ({\n  type: CHANGE_TERM,\n  count,\n});\n\nexport { orderReducer, changePlan, changeTerm, changeSlots };\n","import './PlanCard.scss';\n\nconst PlanCard = ({\n  name,\n  minItems,\n  countries,\n  itemCost,\n  cost,\n  id,\n  changePlan,\n}) => {\n  const handleInputChange = (evt) => {\n    changePlan(evt.target.value);\n  };\n\n  return (\n    <label className=\"plan-card\">\n      <input\n        className=\"plan-card__input\"\n        type=\"radio\"\n        name=\"plan\"\n        value={id}\n        onChange={handleInputChange}\n      />\n      <span className=\"plan-card__wrapper\">\n        <span className=\"plan-card__title\">{name}</span>\n        <span className=\"plan-card__description-wrapper\">\n          <span className=\"plan-card__description\">{`от ${minItems} слотов,`}</span>\n          <span className=\"plan-card__description\">{`${countries} стран ГЕО,`}</span>\n          <span className=\"plan-card__description\">{`$${Math.round(\n            itemCost / 100\n          )} за слот`}</span>\n        </span>\n        <span className=\"plan-card__coast\">\n          {`$${Math.round(cost / 100)} `}\n          <span className=\"plan-card__coast-text\">/ месяц</span>\n        </span>\n        <a className=\"plan-card__link\" href=\"/mock-link\">\n          Подробнее\n        </a>\n      </span>\n    </label>\n  );\n};\n\nexport default PlanCard;\n","import PlanCard from './../PlanCard/PlanCard';\nimport './PlanSelect.scss';\n\nconst PlanSelect = ({ plans, changePlan }) => {\n  const plansElement = plans.map((item) => (\n    <PlanCard key={item.id} changePlan={changePlan} {...item} />\n  ));\n  return (\n    <div className=\"plan-select\">\n      <h2 className=\"plan-select__title\">План подписки</h2>\n      <div className=\"plan-select__cards\">{plansElement}</div>\n    </div>\n  );\n};\n\nexport default PlanSelect;\n","import React, { useState } from 'react';\nimport './SlotsSelect.scss';\n\nconst SlotsSelect = ({ slotsNumber, minSlotsNumber, changeSlots }) => {\n  const [isError, setError] = useState(false);\n\n  const handleInputChange = (evt) => {\n    changeSlots(evt.target.value);\n  };\n\n  const handleInputBlur = (evt) => {\n    setError(slotsNumber < minSlotsNumber);\n  };\n\n  const handleButtonPlusClick = () => {\n    const newSlots = Number(slotsNumber) + 1;\n    changeSlots(newSlots);\n  };\n\n  const handleButtonMinusClick = () => {\n    const newSlots = Number(slotsNumber) - 1;\n    changeSlots(newSlots);\n  };\n\n  return (\n    <div className=\"slots-select\">\n      <h3 className=\"slots-select__title\">Количество слотов</h3>\n      <div className=\"slots-select__input-wrapper\">\n        <input\n          className=\"slots-select__input\"\n          type=\"number\"\n          value={slotsNumber || ''}\n          min=\"0\"\n          disabled={slotsNumber === null}\n          onChange={handleInputChange}\n          onBlur={handleInputBlur}\n        />\n        <button\n          className=\"slots-select__button slots-select__button--plus\"\n          onClick={handleButtonPlusClick}\n          disabled={slotsNumber === null}\n          type=\"button\"\n        >\n          +\n        </button>\n        <button\n          className=\"slots-select__button slots-select__button--minus\"\n          onClick={handleButtonMinusClick}\n          disabled={slotsNumber === null || slotsNumber === minSlotsNumber}\n          type=\"button\"\n        >\n          -\n        </button>\n        {isError && (\n          <span className=\"slots-select__error\">\n            {`Для оформления выбранного плана необходимо более ${minSlotsNumber} слотов`}\n          </span>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default SlotsSelect;\n","import PlanSelect from './../PlanSelect/PlanSelect';\nimport SlotsSelect from './../SlotsSelect/SlotsSelect';\nimport './Step1.scss';\n\nconst Step1 = ({\n  currentStep,\n  plans,\n  changePlan,\n  changeSlots,\n  slotsNumber,\n  minSlotsNumber,\n}) => {\n  if (currentStep !== 1) {\n    return null;\n  }\n\n  return (\n    <div className=\"step1\">\n      <div className=\"step1__plan\">\n        <PlanSelect plans={plans} changePlan={changePlan} />\n      </div>\n      <div className=\"step1__slots\">\n        <SlotsSelect\n          changeSlots={changeSlots}\n          slotsNumber={slotsNumber}\n          minSlotsNumber={minSlotsNumber}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Step1;\n","import Select from 'react-select';\nimport './TermSelect.scss';\n\nfunction TermSelect({ changeTerm, subscriptions, totalCostForSelect }) {\n  const options = subscriptions.map((item, i) => ({\n    value: item.value,\n    label: `${item.value} ${\n      item.value === 1 ? 'месяц' : 'месяца'\n    } - ${Math.round(totalCostForSelect[i] / 100)}$`,\n  }));\n  const handleChange = (selectedOption) => {\n    changeTerm(selectedOption.value);\n  };\n\n  return (\n    <div className=\"term-select\">\n      <h2 className=\"term-select__title\">Срок подписки</h2>\n      <Select options={options} onChange={handleChange} />\n    </div>\n  );\n}\n\nexport default TermSelect;\n","import TermSelect from '../TermSelect/TermSelect';\nimport './Step2.scss';\n\nconst Step2 = ({\n  currentStep,\n  changeTerm,\n  subscriptions,\n  totalCostForSelect,\n}) => {\n  if (currentStep !== 2) {\n    return null;\n  }\n\n  return (\n    <div className=\"step2\">\n      <TermSelect\n        changeTerm={changeTerm}\n        subscriptions={subscriptions}\n        totalCostForSelect={totalCostForSelect}\n      />\n    </div>\n  );\n};\n\nexport default Step2;\n","import './Step3.scss';\n\nconst Step3 = ({ currentStep }) => {\n  if (currentStep !== 3) {\n    return null;\n  }\n\n  return (\n    <div className=\"step3\">\n      <h2 className=\"step3__title\">Пополнение</h2>\n      <div className=\"step3__cash\">\n        <label className=\"step3__input-title step3__input-title--cash\">\n          Введите сумму\n          <input className=\"step3__input\" type=\"number\" />\n        </label>\n      </div>\n      <div className=\"step3__payment\">\n        <p className=\"step3__input-title step3__input-title--payment\">\n          Способ пополнения\n        </p>\n        <div className=\"step3__radio-wrapper\">\n          <label className=\"step3__label\">\n            Кредитной картой\n            <input\n              className=\"step3__radio\"\n              type=\"radio\"\n              name=\"payment\"\n              value=\"card\"\n            />\n          </label>\n          <label className=\"step3__label\">\n            Webmoney\n            <input\n              className=\"step3__radio\"\n              type=\"radio\"\n              name=\"payment\"\n              value=\"webmoney\"\n            />\n          </label>\n          <label className=\"step3__label\">\n            Яндекс.Деньги\n            <input\n              className=\"step3__radio\"\n              type=\"radio\"\n              name=\"payment\"\n              value=\"yandex\"\n            />\n          </label>\n          <label className=\"step3__label\">\n            Bitcoin\n            <input\n              className=\"step3__radio\"\n              type=\"radio\"\n              name=\"payment\"\n              value=\"bitcoin\"\n            />\n          </label>\n          <label className=\"step3__label\">\n            QIWI кошелек\n            <input\n              className=\"step3__radio\"\n              type=\"radio\"\n              name=\"payment\"\n              value=\"\"\n            />\n          </label>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Step3;\n","import './Button.scss';\n\nfunction Button({ name, isActive, onClick, mod, type = 'button' }) {\n  return (\n    <div className=\"button__wrapper\">\n      <button\n        className={`button ${mod ? `button--${mod}` : ''}`}\n        type={type}\n        disabled={!isActive}\n        onClick={onClick}\n      >\n        {name}\n      </button>\n    </div>\n  );\n}\n\nexport default Button;\n","import './Pagination.scss';\n\nconst Pagination = ({ currentStep, name }) => {\n  return (\n    <div className=\"pagination\">\n      <div className=\"pagination__count\">{`Шаг ${currentStep}/3`}</div>\n      <div className=\"pagination__name\">{name[currentStep - 1]}</div>\n      <div\n        className={`pagination__line pagination__line--${currentStep}`}\n      ></div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  changePlan,\n  changeTerm,\n  changeSlots,\n} from './../../redux/order-reducer';\nimport Step1 from './../Step1/Step1';\nimport Step2 from './../Step2/Step2';\nimport Step3 from './../Step3/Step3';\nimport Button from './../Button/Button';\nimport Pagination from './../Pagination/Pagination';\nimport './MasterForm.scss';\n\nclass MasterForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isActiveNext: false,\n      isActivePrev: true,\n      paginationName: ['План подписки', 'Срок подписки', 'Оплата'],\n    };\n  }\n\n  _next = () => {\n    let currentStep = this.props.currentStep;\n    currentStep = currentStep >= 2 ? 3 : currentStep + 1;\n    this.props.changeStep(currentStep);\n  };\n\n  _prev = () => {\n    let currentStep = this.props.currentStep;\n    currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n    this.props.changeStep(currentStep);\n  };\n\n  changePlan = (id) => {\n    this.props.changePlan(id);\n    this.setState({ isActiveNext: true });\n  };\n\n  changeSlots = (value) => {\n    this.setState({ isActiveNext: value >= this.props.minSlotsNumber });\n    this.props.changeSlots(value);\n  };\n\n  render() {\n    return (\n      <>\n        <form className=\"master-form\">\n          <div className=\"master-form__main\">\n            <Step1\n              currentStep={this.props.currentStep}\n              plans={this.props.plans}\n              slotsNumber={this.props.slotsNumber}\n              minSlotsNumber={this.props.minSlotsNumber}\n              changePlan={this.changePlan}\n              changeSlots={this.changeSlots}\n            />\n            <Step2\n              currentStep={this.props.currentStep}\n              changeTerm={this.props.changeTerm}\n              subscriptions={this.props.subscriptions}\n              totalCostForSelect={this.props.totalCostForSelect}\n            />\n            <Step3 currentStep={this.props.currentStep} />\n          </div>\n          <div className=\"master-form__button\">\n            {this.props.currentStep < 4 ? (\n              <Button\n                name=\"Продолжить\"\n                onClick={this._next}\n                isActive={\n                  this.state.isActiveNext && this.props.currentStep !== 3\n                }\n              />\n            ) : null}\n            {this.props.currentStep !== 1 && this.props.currentStep < 4 ? (\n              <Button\n                name=\"< Вернуться назад\"\n                onClick={this._prev}\n                isActive={this.state.isActivePrev}\n                mod=\"prev\"\n              />\n            ) : null}\n          </div>\n          {this.props.currentStep < 4 ? (\n            <div className=\"master-form__pagination\">\n              <Pagination\n                currentStep={this.props.currentStep}\n                name={this.state.paginationName}\n              />\n            </div>\n          ) : null}\n        </form>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  plans: state.data.data,\n  planId: state.order.id,\n  slotsNumber: state.order.slotsNumber,\n  minSlotsNumber: state.order.minSlotsNumber,\n  subscriptionTerm: state.order.subscriptionTerm,\n  slotCost: state.order.slotCost,\n  subscriptions: state.data.subscriptions,\n  totalCostForSelect: state.order.totalCostForSelect,\n});\n\nexport default connect(mapStateToProps, {\n  changePlan,\n  changeTerm,\n  changeSlots,\n})(MasterForm);\n","import './OrderItem.scss';\n\nfunction OrderItem({ name, added, description, mod }) {\n  return (\n    <div className=\"order-item\">\n      <span className=\"order-item__name\">{name}</span>\n      <span\n        className={`order-item__added ${\n          mod ? `order-item__added--${mod}` : ''\n        }`}\n      >\n        {added}\n      </span>\n      <span className=\"order-item__description\">{description}</span>\n    </div>\n  );\n}\n\nexport default OrderItem;\n","import { connect } from 'react-redux';\nimport OrderItem from './../OrderItem/OrderItem';\nimport Button from './../Button/Button';\nimport './Order.scss';\n\nconst Order = ({\n  planName,\n  planCost,\n  slotsNumber,\n  subscriptionTerm,\n  discount,\n  totalCost,\n  balance,\n  isTermSelected,\n  changeStep,\n}) => {\n  let termElement, discountElement;\n  const description = slotsNumber ? `${slotsNumber} слотов` : null;\n  const currentPlanName = planName || 'не выбран';\n\n  const planElement = (\n    <OrderItem\n      name={`План ${currentPlanName}`}\n      added={`$${Math.round(planCost / 100)}`}\n      description={description}\n    />\n  );\n\n  if (isTermSelected) {\n    const termDescription = subscriptionTerm === 1 ? 'месяц' : 'месяца';\n    termElement = (\n      <OrderItem\n        name=\"Срок подписки\"\n        added={`x${subscriptionTerm}`}\n        description={`${subscriptionTerm} ${termDescription}`}\n      />\n    );\n  }\n\n  if (discount) {\n    discountElement = (\n      <OrderItem\n        name={'Скидка'}\n        added={`-${discount}%`}\n        description={`на подписку`}\n        mod={'discount'}\n      />\n    );\n  }\n\n  const handleButtonClick = () => {\n    if (balance >= totalCost) {\n      changeStep(4);\n    }\n  };\n\n  return (\n    <div className=\"order\">\n      <h2 className=\"order__title\">Ваш запрос</h2>\n      <div className=\"order__items-wrapper\">\n        <div className=\"order__plan\">{planElement}</div>\n        <div className=\"order__term\">{termElement}</div>\n        <div className=\"order__discount\">{discountElement}</div>\n      </div>\n\n      <div className=\"order__total-wrapper\">\n        Итого:\n        <span className=\"order__total\">{`$${Math.round(\n          totalCost / 100\n        )}`}</span>\n      </div>\n\n      <div className=\"order__bottom-wrapper\">\n        <div className=\"order__balance-wrapper\">\n          <span className=\"order__balance-description\">{`Ваш баланс: `}</span>\n          <span className=\"order__balance\">{`$${Math.round(\n            balance / 100\n          )}.00`}</span>\n        </div>\n        <div className=\"order__button\">\n          <Button\n            name={'Запросить'}\n            isActive={totalCost && balance >= totalCost}\n            onClick={handleButtonClick}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  planName: state.order.planName,\n  planCost: state.order.planCost,\n  slotsNumber: state.order.slotsNumber,\n  subscriptionTerm: state.order.subscriptionTerm,\n  discount: state.order.discount,\n  totalCost: state.order.totalCost,\n  balance: state.order.balance,\n  isTermSelected: state.order.isTermSelected,\n});\n\nexport default connect(mapStateToProps)(Order);\n","import { connect } from 'react-redux';\nimport Button from '../Button/Button';\nimport './FinalStep.scss';\n\nconst FinalStep = ({\n  planName,\n  planCost,\n  slotsNumber,\n  subscriptionTerm,\n  discount,\n  totalCost,\n}) => {\n  return (\n    <div className=\"final-step\">\n      <h2 className=\"final-step__title\">Готово!</h2>\n      <p className=\"final-step__description\">\n        Подписка на аккаунты успешно оформлена\n        <br />\n        Начните запрашивать аккаунты из раздела «Подписка»\n      </p>\n      <ul className=\"final-step__list\">\n        <li className=\"final-step__item\">\n          <span className=\"final-step__name\">{`План ${planName}`}</span>\n          <span className=\"final-step__added\">{`$${Math.round(\n            planCost / 100\n          )}`}</span>\n          <span className=\"final-step__added-description\">{`${slotsNumber} слотов`}</span>\n        </li>\n        <li className=\"final-step__item\">\n          <span className=\"final-step__name\">Срок подписки</span>\n          <span className=\"final-step__added\">{`x${subscriptionTerm}`}</span>\n          <span className=\"final-step__added-description\">{`${subscriptionTerm} ${\n            subscriptionTerm === 1 ? 'месяц' : 'месяца'\n          }`}</span>\n        </li>\n        {!discount ? null : (\n          <li className=\"final-step__item\">\n            <span className=\"final-step__name\">Скидка</span>\n            <span className=\"final-step__added\">{`-${discount}%`}</span>\n            <span className=\"final-step__added-description\">На подписку</span>\n          </li>\n        )}\n      </ul>\n      <div className=\"final-step__total\">\n        <span>Итого:</span>\n        <span className=\"final-step__total-cost\">{` $${Math.round(\n          totalCost / 100\n        )}`}</span>\n      </div>\n      <div className=\"final-step__button\">\n        <Button name=\"Перейти к запросу\" isActive=\"true\" />\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  planName: state.order.planName,\n  planCost: state.order.planCost,\n  slotsNumber: state.order.slotsNumber,\n  subscriptionTerm: state.order.subscriptionTerm,\n  discount: state.order.discount,\n  totalCost: state.order.totalCost,\n});\n\nexport default connect(mapStateToProps)(FinalStep);\n","import { useState } from 'react';\nimport Header from './components/Header/Header';\nimport MasterForm from './components/MasterForm/MasterForm';\nimport Order from './components/Order/Order';\nimport FinalStep from './components/FinalStep/FinalStep';\nimport './App.scss';\n\nfunction App() {\n  const [currentStep, setStep] = useState(1);\n\n  const changeStep = (value) => {\n    setStep(value);\n  };\n  return (\n    <div className=\"app\">\n      <div className=\"app__header\">\n        <Header />\n      </div>\n      {currentStep < 4 ? (\n        <>\n          <div className=\"app__content\">\n            <MasterForm currentStep={currentStep} changeStep={changeStep} />\n          </div>\n          <div className=\"app__order\">\n            <Order changeStep={changeStep} />\n          </div>\n        </>\n      ) : null}\n      {currentStep === 4 ? (\n        <div className=\"app__finish\">\n          <FinalStep />{' '}\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport default App;\n","import { data, subscriptions } from './mock-data';\n\nconst initialState = {\n  data,\n  subscriptions,\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport { dataReducer };\n","import { createStore, combineReducers } from 'redux';\nimport { dataReducer } from './data-reducer';\nimport { orderReducer } from './order-reducer';\n\nconst reducers = combineReducers({\n  data: dataReducer,\n  order: orderReducer,\n});\n\nconst store = createStore(reducers);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'normalize.css';\n\nimport App from './App';\nimport store from './redux/store';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}